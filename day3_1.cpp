#include<stdio.h>
void main() {

	// 데이터를 저장할때에는, 이진수체계에 맞게 변형하여 저장

	//'A' ,'b','+' 
	//비트(bit)연산자 -> 이진수 확인 !

	// % | ^ ~
	// >> << : 쉬프트연산자

	int i = 9;
	// 이진수로 바꿔서 저장 1001 
	// 1bit == 0,1  8bit == 1byte -> int==4byte==32bit
	//int 9를 넣으면 -> 9 = 00000000 00000000 00000000 00001001 

	// -> %d가 10진수를 표현하기 때문에 밑에거 계산 해도 10진수로 값이 나온다 
	printf("9 & 7 = %d\n", 9 & 7);
	printf("9 | 7 = %d\n", 9 | 7);
	printf("9 ^ 7 = %d\n", 9 ^ 7); // XOR ->같은 비트인지 다른비트인지 확인함 
								   // 비교하는 비트의 값이 같으면 '0' , 다르면 '1'
	printf("~ 1 = %d\n", ~ 1); // (bit)NOT 보수 개념을 가지고 있음
	//  0  1  2  3  4 ..
	// -1 -2 -3 -4 -5 ..
	
	printf("10>>2= %d \n", 10 >> 2); 
	// 비트가 옆으로 이동하면서 넘어가는건 삭제 되고 비어있는곳에 0이 채워짐
	printf("10<<2= %d \n", 10 << 2);

	char c = 'a'; //97
	// 단일문자들을 정수에 매칭해두었는데, [아스키코드표]
	printf("c= %c %d\n", c, c);
	int i = 65;
	printf("i= %d %c\n", i, i);



}